# Generated by Django 5.2.7 on 2025-10-15 06:14

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HotelStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='calificación promedio')),
                ('total_reviews', models.PositiveIntegerField(default=0, verbose_name='total de reseñas')),
                ('avg_cleanliness', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='limpieza promedio')),
                ('avg_service', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='servicio promedio')),
                ('avg_location', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='ubicación promedio')),
                ('avg_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='calidad-precio promedio')),
                ('recommendation_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='% recomendaciones')),
                ('total_bookings', models.PositiveIntegerField(default=0, verbose_name='total de reservaciones')),
                ('completed_bookings', models.PositiveIntegerField(default=0, verbose_name='reservaciones completadas')),
                ('cancelled_bookings', models.PositiveIntegerField(default=0, verbose_name='reservaciones canceladas')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='última actualización')),
                ('hotel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='bookings.hotel', verbose_name='hotel')),
            ],
            options={
                'verbose_name': 'estadísticas del hotel',
                'verbose_name_plural': 'estadísticas de hoteles',
            },
        ),
        migrations.CreateModel(
            name='ReviewAndRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Calificación de 1 a 5 estrellas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='calificación general')),
                ('cleanliness_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='limpieza')),
                ('service_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='servicio')),
                ('location_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='ubicación')),
                ('value_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='relación calidad-precio')),
                ('title', models.CharField(blank=True, help_text='Título breve de la reseña', max_length=200, verbose_name='título')),
                ('review_text', models.TextField(help_text='Comparte tu experiencia en el hotel', verbose_name='comentario')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='¿recomendarías este hotel?')),
                ('review_date', models.DateTimeField(auto_now_add=True, verbose_name='fecha de reseña')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado')),
                ('is_active', models.BooleanField(default=True, help_text='Las reseñas inactivas no se muestran al público', verbose_name='activo')),
                ('is_verified', models.BooleanField(default=False, help_text='Reseña de un huésped que completó su estancia', verbose_name='verificado')),
                ('hotel_response', models.TextField(blank=True, verbose_name='respuesta del hotel')),
                ('hotel_response_date', models.DateTimeField(blank=True, null=True, verbose_name='fecha de respuesta')),
                ('helpful_count', models.PositiveIntegerField(default=0, verbose_name='votos útiles')),
                ('booking', models.OneToOneField(blank=True, help_text='Reservación asociada a esta reseña', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to='bookings.booking', verbose_name='reservación')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bookings.hotel', verbose_name='hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'reseña y calificación',
                'verbose_name_plural': 'reseñas y calificaciones',
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='reviews.reviewandrating', verbose_name='reseña')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'voto útil',
                'verbose_name_plural': 'votos útiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='reviewandrating',
            index=models.Index(fields=['hotel', 'is_active'], name='reviews_rev_hotel_i_ed5ec7_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewandrating',
            index=models.Index(fields=['user', 'review_date'], name='reviews_rev_user_id_37504d_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewandrating',
            index=models.Index(fields=['rating', 'is_active'], name='reviews_rev_rating_4d24ef_idx'),
        ),
        migrations.AddConstraint(
            model_name='reviewandrating',
            constraint=models.UniqueConstraint(condition=models.Q(('booking__isnull', False)), fields=('user', 'booking'), name='unique_review_per_booking'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewhelpful',
            unique_together={('review', 'user')},
        ),
    ]
